{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/PopupWithImage.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","likesNumber","length","key","type","aria-label","onClick","onCardDelete","style","backgroundImage","link","onCardClick","name","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","index","Footer","PopupWithForm","isOpen","action","noValidate","onSubmit","onClose","title","children","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","required","value","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setTitle","setLink","PopupWithImage","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","imageLink","method","body","JSON","stringify","data","cardId","Authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","userProfile","getInitialCards","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","updateProfile","updateAvatar","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.38416b74.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"logo\" />\n    </header>\n  );\n}\nexport default Header; ","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext({});","import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  // Checking if you are the owner of the current card\n  // const isOwn = props.card.owner._id === currentUser._id;\n  const isOwn = currentUser && props.card.owner._id === currentUser._id;\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `card__delete-button ${\n    isOwn ? \"card__delete-button_active\" : \"\"\n  }`;\n\n  // Check if the card was liked by the current user\n  // const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n  const isLiked = currentUser && props.card.likes.some((i) => i._id === currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `card__like-button ${\n    isLiked ? \"card__like-button_active\" : \"\"\n  }`;\n\n  const likesNumber = props.card.likes.length;\n\n  return (\n    <>\n      <li key={props.card._id} className=\"card\">\n        <div className=\"card__container\">\n          <button\n            type=\"button\"\n            // className=\"card__delete-button\"\n            aria-label=\"Delete button\"\n            className={cardDeleteButtonClassName}\n            // onClick={handleCardDelete}\n            onClick={() => {\n              props.onCardDelete(props.card);\n            }}\n          ></button>\n          <div\n            className=\"card__image\"\n            style={{ backgroundImage: `url(${props.card.link})` }}\n            // onClick={handleCardClick}\n            onClick={() => {\n              props.onCardClick(props.card);\n            }}\n          ></div>\n          <div className=\"card__text\">\n            <h2 className=\"card__title\">{props.card.name}</h2>\n            <div className=\"card__like-container\">\n              <button\n                type=\"button\"\n                // className=\"card__like-button\"\n                aria-label=\"Like button\"\n                className={cardLikeButtonClassName}\n                // onClick={handleLikeClick}\n                onClick={() => {\n                  props.onCardLike(props.card);\n                }}\n              ></button>\n              <p className=\"card__like-counter\">{likesNumber}</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <div className=\"profile__image-container\">\n            <button\n              className=\"profile__image-edit\"\n              aria-label=\"Update profile image\"\n              onClick={props.onEditAvatar}\n            ></button>\n            <img\n              className=\"profile__image\"\n              src={currentUser.avatar}\n              alt=\"profile-picture\"\n            />\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__text\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <p className=\"profile__subtitle\">{currentUser.about}</p>\n            </div>\n            <button\n              className=\"button profile__edit-button\"\n              aria-label=\"Edit button\"\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n        </div>\n        <button\n          className=\"button profile__add-button\"\n          aria-label=\"Add button\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      {/* Template initial cards */}\n      <section className=\"cards\">\n        <ul className=\"cards__grid\">\n          {props.cards.map((card, index) => (\n            <Card\n              key={index}\n              card={card}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n}\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 | Linda Kovacs - Around The U.S.</p>\n    </footer>\n  );\n}\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <>\n      <section\n        className={`form form__${props.name} ${\n          props.isOpen ? \"form_visible\" : \"\"\n        }`}\n      >\n        <form\n          className=\"form__container\"\n          name={`form__${props.name}`}\n          action=\"#\"\n          noValidate\n          onSubmit={props.onSubmit}\n        >\n          <button\n            className=\"form__reset-button\"\n            type=\"reset\"\n            aria-label=\"Close button\"\n            onClick={props.onClose}\n          ></button>\n          <h2 className=\"form__header\">{props.title}</h2>\n          {props.children}\n        </form>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState();\n  const [description, setDescription] = React.useState();\n\n    // After loading the current user from the API\n  // their data will be used in managed components.\n  React.useEffect(() => {\n    setName(currentUser && currentUser.name);\n    setDescription(currentUser && currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Edit profile\"\n      // isOpen={props.isEditProfilePopupOpen}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <fieldset className=\"form__fields\">\n        <input\n          type=\"text\"\n          className=\"form__input form__title\"\n          id=\"name-input\"\n          name=\"name\"\n          placeholder=\"Name\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          required\n          value={name || \"\"}\n          onChange={handleNameChange}\n        />\n        <span className=\"form__input-error\" id=\"name-input-error\"></span>\n\n        <input\n          type=\"text\"\n          className=\"form__input form__subtitle\"\n          id=\"job-input\"\n          name=\"job\"\n          placeholder=\"Job\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required\n          value={description || \"\"}\n          onChange={handleDescriptionChange}\n        />\n        <span className=\"form__input-error\" id=\"job-input-error\"></span>\n\n        <button\n          className=\"form__submit-button\"\n          type=\"submit\"\n          value=\"Save\"\n          aria-label=\"Save button\"\n        >\n          Save\n        </button>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n          avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n      <PopupWithForm\n        name=\"change-image\"\n        title=\"Change profile picture\"\n        // isOpen={props.isEditAvatarPopupOpen}\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n      >\n        <fieldset className=\"form__fields\">\n          <input\n            type=\"url\"\n            className=\"form__input form__image-link\"\n            id=\"linkImage-input\"\n            name=\"imageLink\"\n            placeholder=\"Image link\"\n            minLength=\"2\"\n            required\n            ref={avatarRef}\n          />\n          <span className=\"form__input-error\" id=\"linkImage-input-error\"></span>\n          <button\n            className=\"form__submit-button\"\n            type=\"submit\"\n            value=\"Save\"\n            aria-label=\"Save button\"\n          >\n            Save\n          </button>\n        </fieldset>\n      </PopupWithForm>\n    );\n}\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n    const [title, setTitle] = React.useState(\"\");\n    const [link, setLink] = React.useState(\"\");\n\n    function handleTitleChange(e) {\n      setTitle(e.target.value);\n    }\n\n    function handleLinkChange(e) {\n      setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      props.onAddPlace({ title, link });\n    }\nreturn (\n  <PopupWithForm\n    name=\"add-card\"\n    title=\"New place\"\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    onSubmit={handleSubmit}\n  >\n    <fieldset className=\"form__fields\">\n      <input\n        type=\"text\"\n        className=\"form__input form__card-title\"\n        id=\"card-input\"\n        name=\"title\"\n        placeholder=\"Title\"\n        minLength=\"1\"\n        maxLength=\"30\"\n        required\n        onChange={handleTitleChange}\n      />\n      <span className=\"form__input-error\" id=\"card-input-error\"></span>\n      <input\n        type=\"url\"\n        className=\"form__input form__image-link\"\n        id=\"link-input\"\n        name=\"link\"\n        placeholder=\"Image link\"\n        required\n        onChange={handleLinkChange}\n      />\n      <span className=\"form__input-error\" id=\"link-input-error\"></span>\n      <button\n        className=\"form__submit-button\"\n        type=\"submit\"\n        value=\"Create\"\n        aria-label=\"Create button\"\n      >\n        Create\n      </button>\n    </fieldset>\n  </PopupWithForm>\n);\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction PopupWithImage(props) {\n  return (\n    <>\n      <section className={\"form form__add-image\" + (props.card ? \" form_visible\" : \"\")}>\n        <div className=\"form__open-image\">\n          <button\n            className=\"form__reset-button\"\n            type=\"reset\"\n            aria-label=\"Close button\"\n            onClick={props.onClose}\n          ></button>\n          <img\n            className=\"form__image\"\n            src={props.card ? props.card.link : \"#\"}\n            alt={props.card ? props.card.name : \"\"}\n          />\n          <p className=\"form__image-title\">\n            {props.card ? props.card.name : \"\"}\n          </p>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithImage;","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // getAppInfo() {\n  //   return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  // }\n\n  // Load Cards from the Server\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Load User Information from the Server\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Update Profile Picture\n  updateAvatar(imageLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({ avatar: imageLink }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Edit Profile\n  updateProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({ name, about }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Add New Card\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Delete Card\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Add and Remove Likes\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: this._headers,\n      method: isLiked ? \"DELETE\" : \"PUT\",\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\n  // Add and Remove Likes\n  // changeLikeCardStatus(isLiked, cardId) {\n  //   if (isLiked) {\n  //     //unlike heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: \"DELETE\",\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   } else {\n  //     //like heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: \"PUT\",\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n// }\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-2\",\n  headers: {\n    Authorization: \"d38c3eff-8aa3-43a2-86b1-ec6a6fc8a616\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport PopupWithImage from \"./PopupWithImage\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/Api\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .updateProfile(name, about)\n      .then((updateProfile) => {\n        setCurrentUser(updateProfile);\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .updateAvatar(avatar)\n      .then((updateProfile) => {\n        setCurrentUser(updateProfile);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        // Create a new array based on the existing one and putting a new card into it\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Update the state\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    // const isOwn = card.owner._id === currentUser._id;\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlace({ title, link }) {\n    api.addNewCard({ title, link }).then((newCard) => {\n      setCards([...cards, newCard]);\n    });\n    closeAllPopups();\n  }\n  \n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((userProfile) => {\n        setCurrentUser(userProfile);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards((cards) => [...cards, ...data]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        cards={cards}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n        onClose={closeAllPopups}\n        isEditProfilePopupOpen={isEditProfilePopupOpen}\n        isAddPlacePopupOpen={isAddPlacePopupOpen}\n        isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n        selectedCard={selectedCard}\n      />\n      <Footer />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlace}\n      />\n      <PopupWithForm\n        name=\"confirmation\"\n        title=\"Are you sure?\"\n        isOpen={false}\n        onClose={closeAllPopups}\n      />\n      <PopupWithImage onClose={closeAllPopups} card={selectedCard} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";"],"sourceRoot":""}